import java.time.Instant

plugins {
  id 'java'
  id 'osgi'
  id 'com.jfrog.bintray' version '1.3.1'
  id 'maven-publish'
}

repositories {
  jcenter()
}

version = '3.1.5-SNAPSHOT'
group = 'com.palominolabs.metrics'

ext.deps = [
    metrics: '3.1.2',
    slf4j  : '1.7.12',
    guice  : '4.0'
]
ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

dependencies {
  compile "io.dropwizard.metrics:metrics-core:$deps.metrics"
  compile "io.dropwizard.metrics:metrics-annotation:$deps.metrics"
  compile "com.google.inject:guice:$deps.guice"
  compile 'com.google.code.findbugs:jsr305:3.0.0'

  testRuntime "org.slf4j:slf4j-simple:$deps.slf4j"
  testRuntime "org.slf4j:jul-to-slf4j:$deps.slf4j"
  testRuntime "org.slf4j:log4j-over-slf4j:$deps.slf4j"
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
}

sourceCompatibility = JavaVersion.VERSION_1_6
compileJava.options.encoding = 'UTF-8'

task sourceJar(type: Jar, dependsOn: classes) {
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
}

publishing {
  publications {
    bintray(MavenPublication) {
      from components.java
      groupId project.group
      artifactId project.name
      version project.version

      artifact sourceJar {
        classifier 'sources'
      }

//      artifact javadocJar {
//        classifier 'javadoc'
//      }
    }
  }
}

bintray {
  user = rootProject.hasProperty('bintrayUser') ? rootProject.property('bintrayUser') : 'FIXME'
  key = rootProject.hasProperty('bintrayApiKey') ? rootProject.property('bintrayApiKey') : 'FIXME'
  publications = ['bintray']

  pkg {
    repo = 'maven'
    licenses = ['Copyfree']
    vcsUrl = 'https://github.com/palominolabs/metrics-guice'
    name = 'com.palominolabs.metrics:metrics-guice'

    version {
      name = project.version
      released = Date.from(Instant.now())
      if (project.isReleaseVersion) {
        vcsTag = 'v' + project.version
      }
    }
  }
}